plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    id 'com.matthewprenger.cursegradle' version '1.+'
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}

ext.info = loadProperties("$rootDir/info.properties")

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "com.matthewprenger.cursegradle"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url "https://maven.pitan76.net/" }
        maven { url "https://maven.neoforged.net/releases/" }
        maven { url "https://maven.shedaniel.me/" }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        // mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        //mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
        mappings loom.layered() {
            it.mappings("net.fabricmc:yarn:${rootProject.yarn_mappings}:v2")
            it.mappings file("../mappings/121-1fix.tiny")
        }

        // https://mvnrepository.com/artifact/org.yaml/snakeyaml
        implementation 'org.yaml:snakeyaml:2.0'
    }

    if (name in "fabric,neoforge".split(",")) {
        var modLoader = name

        if (System.getenv("CURSEFORGE_TOKEN") != null) {
            curseforge {
                apiKey = System.getenv("CURSEFORGE_TOKEN")
                project {
                    id = '682213'
                    changelog = info.changelog
                    releaseType = modLoader == "fabric" ? 'release' : 'beta'
                    if (modLoader == "fabric") {
                        addGameVersion "Fabric"
                    }
                    if (modLoader == "forge") {
                        addGameVersion "Forge"
                    }
                    if (modLoader == "neoforge") {
                        addGameVersion "NeoForge"
                    }
                    addGameVersion '1.21.2'

                    relations {
                        if (modLoader == "fabric") {
                            requiredDependency "fabric-api"
                        }

                        requiredDependency 'architectury-api'
                        embeddedLibrary 'cloth-config'
                        embeddedLibrary 'compatdatapacks'
                    }

                    mainArtifact(tasks.remapJar)
                }
                options {
                    forgeGradleIntegration = false
                }
            }

        }

        if (System.getenv("MODRINTH_TOKEN") != null) {
            modrinth {
                token = System.getenv("MODRINTH_TOKEN")
                projectId = 'mcpitanlibarch'
                versionNumber = info.mod_version + "-" + modLoader
                gameVersions = ['1.21.2']
                versionType = 'release'
                uploadFile = tasks.remapJar
                changelog = info.changelog
                loaders = [modLoader]
                dependencies {
                    if (modLoader == "fabric") {
                        required.project "fabric-api" // Fabric API
                    }
                    required.project "architectury-api"
                    embedded.project "cloth-config"
                    embedded.project "compatdatapacks"
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = info.archives_base_name
    version = info.mod_version + "-" + rootProject.minecraft_version
    group = info.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = 21
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    java {
        withSourcesJar()
    }
}
